// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  name         String
  profileImage String?
  email        String     @unique
  password     String
  role         UserRole   @default(USER)
  status       UserStatus @default(ACTIVE)
  orders       Order[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("users")
}

model AdService {
  id            String   @id @default(uuid())
  name          String
  image         String?
  category      String
  description   String?
  duration      Int
  isActive      Boolean  @default(true)
  isPopular     Boolean  @default(false)
  isNew         Boolean  @default(false)
  isRecommended Boolean  @default(false)
  price         Float
  orders        Order[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("adservices")
}

model Order {
  id         String      @id @default(uuid())
  userId     String?
  serviceId  String
  quantity   Int         @default(1)
  totalPrice Float
  status     OrderStatus @default(PENDING)

  // Guest Order fields
  guestName  String?
  guestEmail String? 
  guestPhone String? 
  guestLink  String? 
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  user    User?      @relation(fields: [userId], references: [id])
  service AdService @relation(fields: [serviceId], references: [id])

  @@map("orders")
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}
